# Generated by Django 3.2.7 on 2021-12-26 18:32

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import sch_proj.utils


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('listings', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='AcademicYear',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_date', models.DateField(null=True)),
                ('end_date', models.DateField(null=True)),
                ('start_year', models.CharField(blank=True, max_length=4, null=True)),
                ('end_year', models.CharField(blank=True, max_length=4, null=True)),
                ('name', models.CharField(blank=True, max_length=12, null=True)),
                ('is_done', models.BooleanField(default=False)),
            ],
            options={
                'ordering': ['-start_date'],
            },
        ),
        migrations.CreateModel(
            name='Employee',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SchoolAdmin',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('first_name', models.CharField(max_length=50, null=True, verbose_name='First Name')),
                ('second_name', models.CharField(max_length=50, null=True, verbose_name='Second Name')),
                ('last_name', models.CharField(max_length=50, null=True, verbose_name='Last Name')),
                ('email', models.EmailField(max_length=254, null=True, verbose_name='Email')),
                ('mobile', models.CharField(max_length=10, null=True, validators=[sch_proj.utils.mobile_check], verbose_name='your mobile number')),
                ('gender', models.CharField(choices=[('male', 'Male'), ('female', 'Female')], max_length=10, verbose_name='Gender')),
                ('date_born', models.DateField(null=True, verbose_name='Date of Born')),
                ('country_born', models.CharField(max_length=200, null=True, verbose_name='Place of Born')),
                ('nationality', models.CharField(max_length=200, null=True, verbose_name='Nationality')),
                ('passport_number', models.CharField(max_length=50, null=True, verbose_name='Pawssport No.')),
                ('address', models.CharField(max_length=200, null=True, verbose_name='Current Address')),
                ('skills', models.TextField()),
                ('is_schadmin', models.BooleanField(default=True, verbose_name='Is School Admin ?')),
                ('is_active', models.BooleanField(default=True, help_text='is this admin school user active ?', verbose_name='is active ?')),
                ('is_superuser', models.BooleanField(default=False, help_text='is this admin school user superuser ?', verbose_name='is superuser?')),
                ('is_staff', models.BooleanField(default=False, help_text='is this admin school staff ?', verbose_name='is staff ?')),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='schooladmins_created_by', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='schooladmins_updated_by', to=settings.AUTH_USER_MODEL)),
                ('user', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'SchoolAdmins',
                'ordering': ['first_name'],
                'unique_together': {('first_name', 'second_name', 'last_name')},
            },
        ),
        migrations.CreateModel(
            name='Teacher',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('first_name', models.CharField(max_length=50, null=True, verbose_name='First Name')),
                ('second_name', models.CharField(max_length=50, null=True, verbose_name='Second Name')),
                ('last_name', models.CharField(max_length=50, null=True, verbose_name='Last Name')),
                ('email', models.EmailField(max_length=254, null=True, verbose_name='Email')),
                ('mobile', models.CharField(max_length=10, null=True, validators=[sch_proj.utils.mobile_check], verbose_name='your mobile number')),
                ('gender', models.CharField(choices=[('male', 'Male'), ('female', 'Female')], max_length=10, null=True, verbose_name='Gender')),
                ('date_born', models.DateField(null=True, verbose_name='Date of Born')),
                ('country_born', models.CharField(max_length=200, null=True, verbose_name='Place of Born')),
                ('nationality', models.CharField(max_length=200, null=True, verbose_name='Nationality')),
                ('passport_number', models.CharField(max_length=50, null=True, verbose_name='Pawssport No.')),
                ('address', models.CharField(max_length=200, null=True, verbose_name='Current Address')),
                ('skills', models.TextField(null=True, verbose_name='Skills')),
                ('is_teacher', models.BooleanField(default=True, verbose_name='is teacher ?')),
                ('is_active', models.BooleanField(default=True, help_text='is this user active ?', verbose_name='is active ?')),
                ('is_user_done', models.CharField(max_length=20, null=True)),
                ('given_username', models.CharField(blank=True, max_length=20, null=True)),
                ('given_password', models.CharField(blank=True, max_length=20, null=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='teachers_created_by', to='users.schooladmin')),
                ('grades', models.ManyToManyField(blank=True, null=True, to='listings.Grade')),
                ('subjects', models.ManyToManyField(blank=True, null=True, to='listings.Subject')),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='teachers_updated_by', to='users.schooladmin')),
                ('user', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Teachers',
                'ordering': ['first_name'],
                'unique_together': {('first_name', 'second_name', 'last_name')},
            },
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('first_name', models.CharField(max_length=50, null=True, verbose_name='First Name')),
                ('second_name', models.CharField(max_length=50, null=True, verbose_name='Second Name')),
                ('last_name', models.CharField(max_length=50, null=True, verbose_name='Last Name')),
                ('email', models.EmailField(max_length=254, null=True, verbose_name='Email')),
                ('mobile', models.CharField(max_length=10, null=True, validators=[sch_proj.utils.mobile_check], verbose_name='your mobile number')),
                ('gender', models.CharField(choices=[('male', 'Male'), ('female', 'Female')], max_length=10, null=True, verbose_name='Gender')),
                ('status', models.CharField(choices=[('inprogress', 'In progress'), ('finished', 'Finished')], max_length=10, null=True, verbose_name='Status')),
                ('date_born', models.DateField(null=True, verbose_name='Date of Born')),
                ('country_born', models.CharField(max_length=200, null=True, verbose_name='Place of Born')),
                ('nationality', models.CharField(max_length=200, null=True, verbose_name='Nationality')),
                ('passport_number', models.CharField(max_length=50, null=True, verbose_name='Pawssport No.')),
                ('address', models.CharField(max_length=200, null=True, verbose_name='Current Address')),
                ('skills', models.TextField(null=True, verbose_name='Skills')),
                ('is_student', models.BooleanField(default=True, verbose_name='is Student ?')),
                ('is_active', models.BooleanField(default=True, help_text='is this user active ?', verbose_name='is active ?')),
                ('is_user_done', models.CharField(max_length=20, null=True)),
                ('given_username', models.CharField(blank=True, max_length=20, null=True)),
                ('given_password', models.CharField(blank=True, max_length=20, null=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='students_created_by', to='users.schooladmin')),
                ('grade', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='student_set', to='listings.grade', verbose_name='Current grade')),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='students_updated_by', to='users.schooladmin')),
                ('user', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Students',
                'ordering': ['grade', 'first_name'],
                'unique_together': {('first_name', 'second_name', 'last_name')},
            },
        ),
        migrations.CreateModel(
            name='MessageTeacherToStudent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('message_subject', models.CharField(max_length=50, null=True, verbose_name='Message Subject')),
                ('message_text', models.TextField(null=True, verbose_name='')),
                ('student', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='users.student', verbose_name='Student')),
                ('teacher', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='users.teacher', verbose_name='Teacher')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ImageUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('image', models.ImageField(blank=True, default='default_user.jpg', null=True, upload_to='user-image/%Y/%m/%d/', verbose_name='User Image')),
                ('user', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Parent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('father_f_name', models.CharField(max_length=200, null=True, verbose_name="Father's first name")),
                ('father_l_name', models.CharField(max_length=200, null=True, verbose_name="Father's last name")),
                ('father_email', models.EmailField(max_length=254, null=True, verbose_name='Father Email')),
                ('father_mobile', models.CharField(max_length=10, null=True, validators=[sch_proj.utils.mobile_check], verbose_name="Father mobile's number")),
                ('father_nationality', models.CharField(max_length=200, null=True, verbose_name='Father nationality')),
                ('father_passport_no', models.CharField(max_length=50, null=True, verbose_name='Pawssport No.')),
                ('father_address', models.CharField(max_length=200, null=True, verbose_name='Current Address')),
                ('mother_fl_name', models.CharField(max_length=200, null=True, verbose_name="mother's fill name")),
                ('mother_mobile', models.CharField(max_length=10, null=True, validators=[sch_proj.utils.mobile_check], verbose_name="Mother's mobile number")),
                ('note', models.TextField(blank=True, null=True, verbose_name='Note')),
                ('is_parent', models.BooleanField(default=True, verbose_name='is parent ?')),
                ('is_active', models.BooleanField(default=True, help_text='is this user active ?', verbose_name='is active ?')),
                ('is_user_done', models.CharField(max_length=20, null=True)),
                ('given_username', models.CharField(blank=True, max_length=20, null=True)),
                ('given_password', models.CharField(blank=True, max_length=20, null=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='parents_created_by', to='users.schooladmin')),
                ('students', models.ManyToManyField(related_name='parent_set', to='users.Student')),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='parents_updated_by', to='users.schooladmin')),
                ('user', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Parents',
                'ordering': ['father_f_name'],
                'unique_together': {('father_f_name', 'father_l_name')},
            },
        ),
    ]
