"""
Django settings for sch_proj project.

Generated by 'django-admin startproject' using Django 3.2.8.

For more information on this file, see
https://docs.djangoproject.com/en/3.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.2/ref/settings/
"""
# https://pypi.org/project/django-heroku/
# import django_heroku
# import os.path


import os
from pathlib import Path



# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = '8361Dc699120Eface9117Ceec9Cc6B6D7Bd5020089B78886'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',

    # local_app
    'users.apps.UsersConfig',
    'listings.apps.ListingsConfig',


    # https://pypi.org/project/django-widget-tweaks/
    'widget_tweaks',

    
    ############# django-bootstrap-datepicker-plus ###
    # https://monim67.github.io/django-bootstrap-datepicker-plus/configure/

    # https://pypi.org/project/django-bootstrap4/
    "bootstrap4",
    # https://pypi.org/project/django-bootstrap-datepicker-plus/
    'bootstrap_datepicker_plus',
]
## https://monim67.github.io/django-bootstrap-datepicker-plus/configure/ ##
### https: // pypi.org/project/django-bootstrap-datepicker-plus / ###
### this is tags for django-bootstrap-datepicker-plus ###
BOOTSTRAP4 = {
    'include_jquery': True,
}



MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    
    # http://whitenoise.evans.io/en/stable/
    'whitenoise.middleware.WhiteNoiseMiddleware',

    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'sch_proj.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR,'templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                # my custom context_processors 
                # https://betterprogramming.pub/django-quick-tips-context-processors-da74f887f1fc
                'users.custom_context_processors.add_variable_to_context'
            ],
        },
    },
]

WSGI_APPLICATION = 'sch_proj.wsgi.application'


# Database
# https://docs.djangoproject.com/en/3.2/ref/settings/#databases



# DATABASES = {
#     'default': {
#         'ENGINE': 'django.db.backends.sqlite3',
#         'NAME': BASE_DIR / 'db.sqlite3',
#     }
# }


DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': 'School_Database',
        'USER': 'postgres',
        'PASSWORD': '12345678',
        'HOST': 'localhost',
        'PORT': '5434',
       
    }
}




# Password validation
# https://docs.djangoproject.com/en/3.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/3.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.2/howto/static-files/
# https://docs.djangoproject.com/en/3.2/howto/static-files/#managing-static-files-e-g-images-javascript-css
# https://docs.djangoproject.com/en/3.2/ref/settings/#staticfiles-dirs
# https://docs.djangoproject.com/en/3.2/ref/contrib/staticfiles/#module-django.contrib.staticfiles
# https: // docs.djangoproject.com/en/3.2/ref/contrib/staticfiles/  # collectstatic

STATIC_URL = '/static/'

STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')  # for depoyment heroku


STATICFILES_DIRS = (                                # for depoyment heroku
    os.path.join(BASE_DIR,'static'),
    )  
# for depoyment heroku
STATICFILES_STORAGE = 'whitenoise.storage.CompressedManifestStaticFilesStorage'


# https://docs.djangoproject.com/en/3.2/ref/settings/#media-root
MEDIA_ROOT = os.path.join(BASE_DIR,'media') 
MEDIA_URL = '/media/'





# Default primary key field type
# https://docs.djangoproject.com/en/3.2/ref/settings/#default-auto-field
DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'


PROJECT_ROOT = os.path.abspath(os.path.dirname(__file__))


TEMPLATE_DIRS = (
    os.path.join(PROJECT_ROOT, "templates"),
)






######################### send_mail ###################################################
# this is my setting for send mail by use the SMTP server of my gmail service provider :
EMAIL_HOST = 'smtp.gmail.com'
EMAIL_PORT = 587
EMAIL_HOST_USER = 'developer.web.dj@gmail.com'
EMAIL_HOST_PASSWORD = ''
EMAIL_USE_TLS = True


# https://myaccount.google.com/lesssecureapps
 # Allow less secure apps: ON


# https://docs.djangoproject.com/en/3.2/topics/email/#smtp-backend
'''
lass backends.smtp.EmailBackend(host=None, port=None, username=None, password=None, use_tls=None, fail_silently=False, use_ssl=None, timeout=None, ssl_keyfile=None, ssl_certfile=None, **kwargs)¶
This is the default backend. Email will be sent through a SMTP server.

The value for each argument is retrieved from the matching setting if the argument is None:

host: EMAIL_HOST
port: EMAIL_PORT
username: EMAIL_HOST_USER
password: EMAIL_HOST_PASSWORD
use_tls: EMAIL_USE_TLS
use_ssl: EMAIL_USE_SSL
timeout: EMAIL_TIMEOUT
ssl_keyfile: EMAIL_SSL_KEYFILE
ssl_certfile: EMAIL_SSL_CERTFILE
'''

#DEFAULT_FROM_EMAIL = 'developer.web.dj@gmail.com'


# from book Django 3 By Example/Sending emails with Django/Page(43)
# SMTP is Simple Mail Transfer Protocol (SMTP) server


'''
you need to define the configuration of an external SMTP server by adding the following settings to the
settings.py file of your project:
• EMAIL_HOST: The SMTP server host the default is localhost
• EMAIL_PORT: The SMTP port the default is 25
• EMAIL_HOST_USER: The username for the SMTP server
• EMAIL_HOST_PASSWORD: The password for the SMTP server
• EMAIL_USE_TLS: Whether to use a Transport Layer Security(TLS) secure connection
• EMAIL_USE_SSL: Whether to use an implicit TLS secure connection
'''


'''
If you want to send emails but you don't have a local SMTP server, you can
probably use the SMTP server of your email service provider. The following sample
configuration is valid for sending emails via Gmail servers using a Google account:
EMAIL_HOST = 'smtp.gmail.com'
EMAIL_PORT = 587
EMAIL_HOST_USER = 'your_account@gmail.com'
EMAIL_HOST_PASSWORD = 'your_password'
EMAIL_USE_TLS = True
'''

'''
If you are sending emails using Gmail with the preceding configuration, you will
have to enable access for less secure applications at 

https://myaccount.google.com/lesssecureapps

, as follows:
Allow less secure apps: ON


In some cases, you may also have to disable Gmail captcha at https://accounts.
google.com/displayunlockcaptcha in order to send emails with Django.
'''

'''
If you canot use an SMTP server, you can tell Django to write emails to the console
by adding the following setting to the settings.py file:

EMAIL_BACKEND = 'django.core.mail.backends.console.EmailBackend'
'''

###################### end send_email ######################################################


############## deployment to heruko ########################
# django_heroku.settings(locals())
